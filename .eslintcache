[{"D:\\学习\\vv\\src\\index.tsx":"1","D:\\学习\\vv\\src\\reportWebVitals.ts":"2","D:\\学习\\vv\\src\\App.tsx":"3","D:\\学习\\vv\\src\\components\\Button\\button.tsx":"4","D:\\学习\\vv\\src\\components\\Menu\\menu.tsx":"5","D:\\学习\\vv\\src\\components\\Menu\\menuItem.tsx":"6","D:\\学习\\vv\\src\\components\\Menu\\subMenu.tsx":"7","D:\\学习\\vv\\src\\components\\Icon\\icon.tsx":"8","D:\\学习\\vv\\src\\components\\Transition\\transition.tsx":"9","D:\\学习\\vv\\src\\components\\Button\\Button.stories.tsx":"10","D:\\学习\\vv\\src\\components\\Input\\input.tsx":"11","D:\\学习\\vv\\src\\components\\Input\\Input.tsx":"12","D:\\学习\\vv\\src\\components\\Input\\input.stories.tsx":"13","D:\\学习\\vv\\src\\components\\AutoComplete\\AutoComplete.stories.tsx":"14","D:\\学习\\vv\\src\\components\\AutoComplete\\AutoComplete.tsx":"15","D:\\学习\\vv\\src\\components\\AutoComplete\\autoComplete.stories.tsx":"16","D:\\学习\\vv\\src\\components\\AutoComplete\\autoComplete.tsx":"17","D:\\学习\\vv\\src\\hooks\\useDebounce.tsx":"18","D:\\学习\\vv\\src\\hooks\\useClickOutside.tsx":"19","D:\\学习\\vv\\src\\components\\Upload\\upload.stories.tsx":"20","D:\\学习\\vv\\src\\components\\Upload\\upload.tsx":"21","D:\\学习\\vv\\src\\components\\Upload\\uploadList.tsx":"22","D:\\学习\\vv\\src\\components\\Progress\\progress.tsx":"23","D:\\学习\\vv\\src\\components\\Upload\\dragger.tsx":"24","D:\\学习\\vv\\src\\components\\Button\\index.tsx":"25","D:\\学习\\vv\\src\\components\\Icon\\index.tsx":"26","D:\\学习\\vv\\src\\components\\Progress\\index.tsx":"27","D:\\学习\\vv\\src\\components\\Input\\index.tsx":"28","D:\\学习\\vv\\src\\components\\Menu\\index.tsx":"29","D:\\学习\\vv\\src\\components\\Transition\\index.tsx":"30","D:\\学习\\vv\\src\\components\\AutoComplete\\index.tsx":"31","D:\\学习\\vv\\src\\components\\Upload\\index.tsx":"32"},{"size":1154,"mtime":1609296765089,"results":"33","hashOfConfig":"34"},{"size":425,"mtime":1607564715236,"results":"35","hashOfConfig":"34"},{"size":2110,"mtime":1608688266915,"results":"36","hashOfConfig":"34"},{"size":1367,"mtime":1608023662314,"results":"37","hashOfConfig":"34"},{"size":2063,"mtime":1608276479288,"results":"38","hashOfConfig":"34"},{"size":897,"mtime":1608276095400,"results":"39","hashOfConfig":"34"},{"size":2740,"mtime":1608541554527,"results":"40","hashOfConfig":"34"},{"size":670,"mtime":1608778707036,"results":"41","hashOfConfig":"34"},{"size":893,"mtime":1608541362415,"results":"42","hashOfConfig":"34"},{"size":809,"mtime":1608626381437,"results":"43","hashOfConfig":"34"},{"size":1700,"mtime":1608777736445,"results":"44","hashOfConfig":"34"},{"size":1700,"mtime":1608777736445,"results":"45","hashOfConfig":"34"},{"size":1548,"mtime":1608778201596,"results":"46","hashOfConfig":"34"},{"size":2147,"mtime":1608777816773,"results":"47","hashOfConfig":"34"},{"size":2423,"mtime":1608777760056,"results":"48","hashOfConfig":"34"},{"size":2197,"mtime":1608858953510,"results":"49","hashOfConfig":"34"},{"size":4797,"mtime":1608860907331,"results":"50","hashOfConfig":"34"},{"size":422,"mtime":1608792372015,"results":"51","hashOfConfig":"34"},{"size":590,"mtime":1608863652387,"results":"52","hashOfConfig":"34"},{"size":1258,"mtime":1609147555077,"results":"53","hashOfConfig":"34"},{"size":5790,"mtime":1609147580050,"results":"54","hashOfConfig":"34"},{"size":1455,"mtime":1609138432871,"results":"55","hashOfConfig":"34"},{"size":929,"mtime":1609138314656,"results":"56","hashOfConfig":"34"},{"size":1141,"mtime":1609147203464,"results":"57","hashOfConfig":"34"},{"size":53,"mtime":1609295633629,"results":"58","hashOfConfig":"34"},{"size":60,"mtime":1609296763444,"results":"59","hashOfConfig":"34"},{"size":60,"mtime":1609295931801,"results":"60","hashOfConfig":"34"},{"size":51,"mtime":1609295655872,"results":"61","hashOfConfig":"34"},{"size":409,"mtime":1609295914330,"results":"62","hashOfConfig":"34"},{"size":66,"mtime":1609295948629,"results":"63","hashOfConfig":"34"},{"size":74,"mtime":1609295978129,"results":"64","hashOfConfig":"34"},{"size":54,"mtime":1609295961232,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"18y9jn7",{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"75"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"89"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"75"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"75"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"75"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\学习\\vv\\src\\index.tsx",[],"D:\\学习\\vv\\src\\reportWebVitals.ts",[],["138","139"],"D:\\学习\\vv\\src\\App.tsx",[],"D:\\学习\\vv\\src\\components\\Button\\button.tsx",[],["140","141"],"D:\\学习\\vv\\src\\components\\Menu\\menu.tsx",[],"D:\\学习\\vv\\src\\components\\Menu\\menuItem.tsx",[],"D:\\学习\\vv\\src\\components\\Menu\\subMenu.tsx",["142"],"import React, { useContext, FunctionComponentElement, useState } from \"react\";\r\nimport classNames from \"classnames\";\r\nimport { MenuContext } from \"./menu\";\r\nimport { MenuItemsProps } from \"./menuItem\";\r\nimport Icon from \"../Icon/icon\";\r\nimport Transition from './../Transition/transition';\r\nexport interface SubMenuProps {\r\n  index?: string;\r\n  title: string;\r\n  className?: string;\r\n}\r\nconst SubMenu: React.FC<SubMenuProps> = ({\r\n  index,\r\n  title,\r\n  children,\r\n  className,\r\n}) => {\r\n  const context = useContext(MenuContext);\r\n  const opendSubMenus = context.defaultOpenSubMenus as Array<string>;\r\n  const isOpend =\r\n    index && context.mode === \"vertical\"\r\n      ? opendSubMenus.includes(index)\r\n      : false;\r\n  const [menuOpen, setOpen] = useState(isOpend);\r\n  const classes = classNames(\"menu-item submenu-item\", className, {\r\n    \"is-active\": context.index === index,\r\n    \"is-opened\": menuOpen,\r\n    \"is-vertical\": context.mode === \"vertical\",\r\n  });\r\n  const handleClick = (e: React.MouseEvent) => {\r\n    e.preventDefault();\r\n    setOpen(!menuOpen);\r\n  };\r\n  let timer: any;\r\n\r\n  const handleMouse = (e: React.MouseEvent, toggle: boolean) => {\r\n    clearTimeout(timer);\r\n    e.preventDefault();\r\n    timer = setTimeout(() => {\r\n      setOpen(toggle);\r\n    }, 300);\r\n  };\r\n  const clickEvents =\r\n    context.mode === \"vertical\"\r\n      ? {\r\n          onClick: handleClick,\r\n        }\r\n      : {};\r\n  const hoverEvents =\r\n    context.mode !== \"vertical\"\r\n      ? {\r\n          onMouseEnter: (e: React.MouseEvent) => handleMouse(e, true),\r\n          onMouseLeave: (e: React.MouseEvent) => handleMouse(e, false),\r\n        }\r\n      : {};\r\n  const renderChildren = () => {\r\n    const subMenuClasses = classNames(\"viking-submenu\", {\r\n      \"menu-opened\": menuOpen,\r\n    });\r\n    const childrenComponent = React.Children.map(children, (child, i) => {\r\n      const childElement = child as React.FunctionComponentElement<MenuItemsProps>;\r\n      if (childElement.type.displayName === \"MenuItem\") {\r\n        return React.cloneElement(childElement, { index: `${index}-${i}` });\r\n      } else {\r\n        console.error(\"wraning\");\r\n      }\r\n      return childElement;\r\n    });\r\n    return  (\r\n      <Transition\r\n        in={menuOpen}\r\n        timeout={300}\r\n        animation=\"zoom-in-top\"\r\n      >\r\n        <ul className={subMenuClasses}>\r\n          {childrenComponent}\r\n        </ul>\r\n      </Transition>\r\n    )\r\n  };\r\n  return (\r\n    <li key={index} className={classes} {...hoverEvents}>\r\n      <div className=\"submenu-title\" {...clickEvents}>\r\n        {title}\r\n        <Icon icon=\"angle-down\" className=\"arrow-icon\" />\r\n      </div>\r\n      {renderChildren()}\r\n    </li>\r\n  );\r\n};\r\nSubMenu.displayName = \"SubMenu\";\r\nexport default SubMenu;\r\n","D:\\学习\\vv\\src\\components\\Icon\\icon.tsx",[],"D:\\学习\\vv\\src\\components\\Transition\\transition.tsx",[],"D:\\学习\\vv\\src\\components\\Button\\Button.stories.tsx",[],["143","144"],"D:\\学习\\vv\\src\\components\\Input\\input.tsx",[],"D:\\学习\\vv\\src\\components\\Input\\Input.tsx",[],"D:\\学习\\vv\\src\\components\\Input\\input.stories.tsx",[],"D:\\学习\\vv\\src\\components\\AutoComplete\\AutoComplete.stories.tsx",["145","146"],"D:\\学习\\vv\\src\\components\\AutoComplete\\AutoComplete.tsx",[],"D:\\学习\\vv\\src\\components\\AutoComplete\\autoComplete.stories.tsx",["147","148"],"import React from \"react\";\r\nimport { storiesOf } from \"@storybook/react\";\r\nimport { action } from \"@storybook/addon-actions\";\r\nimport AutoComplete, { DataSourceType } from \"../AutoComplete/autoComplete\";\r\n\r\ninterface LakerPlayerProps {\r\n  value: string;\r\n  number: number;\r\n}\r\ninterface GithubUserProps {\r\n  login: string;\r\n  url: string;\r\n  avatar_url: string;\r\n}\r\nconst SimpleComplete = () => {\r\n  //   const lakers = [\r\n  //     \"bradley\",\r\n  //     \"pope\",\r\n  //     \"caruso\",\r\n  //     \"cook\",\r\n  //     \"cousins\",\r\n  //     \"james\",\r\n  //     \"AD\",\r\n  //     \"green\",\r\n  //     \"howard\",\r\n  //     \"kuzma\",\r\n  //     \"McGee\",\r\n  //     \"rando\",\r\n  //   ];\r\n  const lakersWithNumber = [\r\n    { value: \"bradley\", number: 11 },\r\n    { value: \"pope\", number: 1 },\r\n    { value: \"caruso\", number: 4 },\r\n    { value: \"cook\", number: 2 },\r\n    { value: \"cousins\", number: 15 },\r\n    { value: \"james\", number: 23 },\r\n    { value: \"AD\", number: 3 },\r\n    { value: \"green\", number: 14 },\r\n    { value: \"howard\", number: 39 },\r\n    { value: \"kuzma\", number: 0 },\r\n  ];\r\n  const renderOption = (item: DataSourceType) => {\r\n    const itemWithGithub = item as DataSourceType<GithubUserProps>;\r\n    return (\r\n      <>\r\n        <h5>Name: {itemWithGithub.url}</h5>\r\n        <p>url: {itemWithGithub.login}</p>\r\n      </>\r\n    );\r\n  };\r\n  //   const handleFetch = (query: string) => {\r\n  //     return lakers.filter((name) => name.includes(query)).map((name) => ({ value: name }));\r\n  //   };\r\n\r\n  // const handleFetch = (query: string) => {\r\n  //   return lakersWithNumber.filter((player) => player.value.includes(query));\r\n  // };\r\n\r\n  const handleFetch=(query:string)=>{\r\n    return fetch(`https://api.github.com/search/users?q=${query}`)\r\n    .then(res=>res.json())\r\n    .then(({items})=>{\r\n      // console.log(items)\r\n      return items.slice(0, 2).map((item: any) => ({ value: item.login, ...item}))\r\n    })\r\n  }\r\n  return (\r\n    <div>\r\n      <h1>222222</h1>\r\n      <AutoComplete\r\n      fetchSuggestions={handleFetch}\r\n      onSelect={action(\"selected\")}\r\n      renderOption={renderOption}\r\n    />\r\n    </div>\r\n  );\r\n};\r\nstoriesOf(\"autocomplete component\", module).add(\"autocomplete\", SimpleComplete);\r\n","D:\\学习\\vv\\src\\components\\AutoComplete\\autoComplete.tsx",["149","150"],"import React, {\r\n  ChangeEvent,\r\n  FC,\r\n  ReactElement,\r\n  KeyboardEvent,\r\n  useEffect,\r\n  useState,\r\n  useRef,\r\n} from \"react\";\r\nimport Input, { InputProps } from \"../Input/input\";\r\nimport Icon from \"../Icon/icon\";\r\nimport useDebounce from \"./../../hooks/useDebounce\";\r\nimport classNames from \"classnames\";\r\nimport useClickOutside from './../../hooks/useClickOutside';\r\nimport Transition from \"../Transition/transition\";\r\nimport { loadavg } from \"os\";\r\ninterface DataSourceObject {\r\n  value: string;\r\n}\r\nexport type DataSourceType<T = {}> = T & DataSourceObject;\r\n\r\nexport interface AutoCompleteProps extends Omit<InputProps, \"onSelect\"> {\r\n  /**用于异步查询*/\r\n  fetchSuggestions: (\r\n    str: string\r\n  ) => DataSourceType[] | Promise<DataSourceType[]>;\r\n  /**\r\n   * 下拉列表选择\r\n   */\r\n  onSelect?: (item: DataSourceType) => void;\r\n  /**自定义渲染 */\r\n  renderOption?: (item: DataSourceType) => ReactElement;\r\n}\r\nconst AutoComple: FC<AutoCompleteProps> = (props) => {\r\n  const {\r\n    fetchSuggestions,\r\n    onSelect,\r\n    value,\r\n    renderOption,\r\n    ...restProps\r\n  } = props;\r\n  const [inputValue, setInputValue] = useState(value as string);\r\n  const [suggestions, setSuggestions] = useState<DataSourceType[]>([]);\r\n  const [Loading, setLoading] = useState(false);\r\n  const [showDropdown, setShowDropdown] = useState(false);\r\n  const [highlightIndex, setHighLightIndex] = useState(-1);\r\n  const triggerSearch=useRef(false)\r\n  const debounceValue = useDebounce(inputValue, 500);\r\n  const componentRef = useRef<HTMLDivElement>(null)\r\n  useClickOutside(componentRef,()=>{setSuggestions([])})\r\n  useEffect(() => {\r\n    if (inputValue &&triggerSearch.current) {\r\n      //判断是否是异步查询\r\n      const result = fetchSuggestions(debounceValue);\r\n      // console.log(result)\r\n      if (result instanceof Promise) {\r\n        setLoading(true);\r\n        result.then((data) => {\r\n          setSuggestions(data);\r\n          setLoading(false);\r\n          if (data.length>0) {\r\n            setShowDropdown(true)\r\n          }\r\n        });\r\n      } else {\r\n        //同步只需要修改state\r\n        setSuggestions(result);\r\n        setShowDropdown(true)\r\n      }\r\n    } else {\r\n      //如果输入值为空清空列表\r\n      setSuggestions([]);\r\n      setShowDropdown(false)\r\n    }\r\n    //消除键盘上下键更改的index\r\n    setHighLightIndex(-1)\r\n  }, [debounceValue]);\r\n \r\n  //用于高亮选中项\r\n  const highlight = (index: number) => {\r\n    if (index < 0) index = 0;\r\n    if (index >= suggestions.length) {\r\n      index = suggestions.length - 1;\r\n    }\r\n    setHighLightIndex(index);\r\n  };\r\n  //键盘按键事件\r\n  const handleKeyDown = (e: KeyboardEvent<HTMLInputElement>) => {\r\n    switch (e.keyCode) {\r\n      case 13:\r\n        if (suggestions[highlightIndex]) {\r\n          handleSelect(suggestions[highlightIndex]);\r\n        }\r\n        break;\r\n      case 38:\r\n        highlight(highlightIndex - 1);\r\n        break;\r\n      case 40:\r\n        highlight(highlightIndex + 1);\r\n        break;\r\n      case 27:\r\n        setShowDropdown(false);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n  //input的value改变\r\n  const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    const value = e.target.value.trim();\r\n    setInputValue(value);\r\n    triggerSearch.current=true\r\n  };\r\n   //从列表中选中项\r\n   const handleSelect = (item: DataSourceType) => {\r\n    setInputValue(item.value);\r\n    setSuggestions([]);\r\n    if (onSelect) {\r\n      onSelect(item);\r\n    }\r\n    triggerSearch.current=false\r\n  };\r\n  //用于判断是否是自定义渲染\r\n  const renderTemplate = (item: DataSourceType) => {\r\n    return renderOption ? renderOption(item) : item.value;\r\n  };\r\n  const generateDropdown = () => {\r\n    return (\r\n      <Transition\r\n      in={showDropdown || Loading}\r\n      animation=\"zoom-in-top\"\r\n      timeout={300}\r\n      onExited={() => {setSuggestions([])}}\r\n    >\r\n      <ul className=\"viking-suggestion-list\">\r\n      { Loading &&\r\n        <div className=\"suggstions-loading-icon\">\r\n          <Icon icon=\"spinner\" spin/>\r\n        </div>\r\n      }\r\n      {suggestions.map((item, index) => {\r\n        const cnames = classNames('suggestion-item', {\r\n          'is-active': index === highlightIndex\r\n        })\r\n        return (\r\n          <li key={index} className={cnames} onClick={() => handleSelect(item)}>\r\n            {renderTemplate(item)}\r\n          </li>\r\n        )\r\n      })}\r\n    </ul>\r\n    </Transition>\r\n    )\r\n  }\r\n \r\n\r\n  return (\r\n    <div className=\"viking-auto-complete\" ref={componentRef}>\r\n      <Input\r\n        value={inputValue}\r\n        onChange={handleChange}\r\n        {...restProps}\r\n        onKeyDown={handleKeyDown}\r\n      />\r\n      {generateDropdown()}\r\n    </div>\r\n  );\r\n};\r\nexport default AutoComple;\r\n","D:\\学习\\vv\\src\\hooks\\useDebounce.tsx",[],"D:\\学习\\vv\\src\\hooks\\useClickOutside.tsx",["151"],"import React, { RefObject,useEffect } from 'react';\r\n\r\nfunction useClickOutside(ref:RefObject<HTMLElement>,handler:Function){\r\n    useEffect(() => {\r\n        const listener = (event: MouseEvent) => {\r\n            if (!ref.current || ref.current.contains(event.target as HTMLElement)) {\r\n              return;\r\n            }\r\n            handler(event);\r\n          };\r\n        \r\n        document.addEventListener('click',listener)\r\n        return () => {\r\n            document.removeEventListener('click',listener)\r\n        }\r\n    }, [ref,handler])\r\n}\r\nexport default useClickOutside\r\n\r\n\r\n\r\n","D:\\学习\\vv\\src\\components\\Upload\\upload.stories.tsx",["152","153"],"D:\\学习\\vv\\src\\components\\Upload\\upload.tsx",["154"],"import React, { ChangeEvent, FC, useRef, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport Button from \"../Button/button\";\r\nimport UploadList from \"./uploadList\";\r\nimport Dragger from './dragger';\r\nexport type UploadFileStatus = \"ready\" | \"uploading\" | \"success\" | \"error\";\r\nexport interface UploadFile {\r\n  uid: string;\r\n  size: number;\r\n  name: string;\r\n  status?: UploadFileStatus;\r\n  percent?: number;\r\n  raw?: File;\r\n  response?: any;\r\n  error?: any;\r\n}\r\n\r\nexport interface UploadProps {\r\n  action: string;\r\n  defaultFileList?: UploadFile[];\r\n  onProgress?: (percentage: number, file: File) => void;\r\n  onSuccess?: (data: any, file: File) => void;\r\n  onError?: (err: any, file: File) => void;\r\n  beforeUpload?: (file: File) => boolean | Promise<File>;\r\n  onChange?: (file: File) => void;\r\n  onRemove?: (file: UploadFile) => void;\r\n  headers?: { [key: string]: any };\r\n  name?: string;\r\n  /**添加自定义formdata类型 */\r\n  data?: { [key: string]: any };\r\n  /**是否携带cookie之类 */\r\n  withCredentials?: boolean;\r\n  accept?:string,\r\n  multiple?:boolean,\r\n  /**是否开启拖拽上传文件 */\r\n  drag?:boolean\r\n}\r\nconst Upload: FC<UploadProps> = (props) => {\r\n  const {\r\n    action,\r\n    onSuccess,\r\n    onError,\r\n    onProgress,\r\n    beforeUpload,\r\n    onChange,\r\n    onRemove,\r\n    defaultFileList,\r\n    headers,\r\n    name,\r\n    data,\r\n    withCredentials,\r\n    accept,\r\n    multiple,\r\n    children,\r\n    drag\r\n  } = props;\r\n  const fileInput = useRef<HTMLInputElement>(null);\r\n  const [fileList, setFileList] = useState<UploadFile[]>(defaultFileList || []);\r\n  /**\r\n   * 上传过程中更改file列中的状态值\r\n   * @param uploadFile 目标正在上传的文件\r\n   * @param updateObj  当前正在上传文件\r\n   */\r\n  const upDataFileList = (\r\n    uploadFile: UploadFile,\r\n    updateObj: Partial<UploadFile>\r\n  ) => {\r\n    console.log(fileList);\r\n    setFileList((preList) => {\r\n      return preList.map((file) => {\r\n        if (file.uid === uploadFile.uid) {\r\n          return { ...file, ...updateObj };\r\n        } else {\r\n          return file;\r\n        }\r\n      });\r\n    });\r\n  };\r\n  /**\r\n   * 触发input-file事件\r\n   */\r\n  const handleClick = () => {\r\n    if (fileInput.current) {\r\n      fileInput.current.click();\r\n    }\r\n  };\r\n  /**\r\n   * 文件更改时触发\r\n   * @param e\r\n   */\r\n  const handleFileChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    const files = e.target.files;\r\n    if (!files) {\r\n      return;\r\n    }\r\n    uploadFiles(files);\r\n    if (fileInput.current) {\r\n      fileInput.current.value = \"\";\r\n    }\r\n  };\r\n  /**\r\n   * 删除当前选中文件\r\n   * @param file 当前需要删除的文件\r\n   */\r\n  const handleRemove = (file: UploadFile) => {\r\n    setFileList((prevList) => {\r\n      return prevList.filter((item) => item.uid !== file.uid);\r\n    });\r\n    if (onRemove) {\r\n      onRemove(file);\r\n    }\r\n  };\r\n  /**\r\n   * 文件上传前触发判断逻辑\r\n   * @param files 当前input的文件列表\r\n   */\r\n  const uploadFiles = (files: FileList) => {\r\n    const postFile = Array.from(files);\r\n    postFile.forEach((file) => {\r\n      if (!beforeUpload) {\r\n        Post(file);\r\n      } else {\r\n        const result = beforeUpload(file);\r\n        if (result && result instanceof Promise) {\r\n          result.then((processFile) => {\r\n            Post(processFile);\r\n          });\r\n        } else if (result !== false) {\r\n          Post(file);\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  const Post = (file: File) => {\r\n    let _file: UploadFile = {\r\n      uid: Date.now() + \"upload-file\",\r\n      status: \"ready\",\r\n      name: file.name,\r\n      size: file.size,\r\n      percent: 0,\r\n      raw: file,\r\n    };\r\n    setFileList((preList) => {\r\n      return [_file, ...preList];\r\n    });\r\n\r\n    const formData = new FormData();\r\n    formData.append(name||'file', file);\r\n    if (data) {\r\n      Object.keys(data).forEach((key) => {\r\n        formData.append(key, data[key]);\r\n      });\r\n    }\r\n    axios\r\n      .post(action, formData, {\r\n        headers: {\r\n          ...headers,\r\n          \"Content-Type\": \"multipart/form-data\",\r\n        },\r\n        withCredentials,\r\n        onUploadProgress: (e) => {\r\n          let percentage = Math.round((e.loaded * 100) / e.total) || 0;\r\n          if (percentage < 100) {\r\n            upDataFileList(_file, { percent: percentage, status: \"uploading\" });\r\n          }\r\n\r\n          if (percentage < 100) {\r\n            if (onProgress) {\r\n              onProgress(percentage, file);\r\n            }\r\n          }\r\n        },\r\n      })\r\n      .then((res) => {\r\n        upDataFileList(_file, { status: \"success\", response: res.data });\r\n        if (onSuccess) {\r\n          onSuccess(res.data, file);\r\n        }\r\n        if (onChange) {\r\n          onChange(file);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        upDataFileList(_file, { status: \"error\", error: err });\r\n        if (onError) {\r\n          onError(err, file);\r\n        }\r\n        if (onChange) {\r\n          onChange(file);\r\n        }\r\n      });\r\n  };\r\n  return (\r\n    <div className=\"viking-upload-component\">\r\n      <div className=\"viking-upload-input\"\r\n        style={{display: 'inline-block'}}\r\n        onClick={handleClick}>\r\n            {drag ? \r\n            <Dragger onFile={(files) => {uploadFiles(files)}}>\r\n              {children}\r\n            </Dragger>:\r\n            children\r\n          }\r\n        <input\r\n          className=\"viking-file-input\"\r\n          style={{display: 'none'}}\r\n          ref={fileInput}\r\n          onChange={handleFileChange}\r\n          type=\"file\"\r\n          accept={accept}\r\n          multiple={multiple}\r\n        />\r\n      </div>\r\n      <UploadList fileList={fileList} onRemove={handleRemove} />\r\n    </div>\r\n  );\r\n};\r\n\r\nUpload.defaultProps = {\r\n  name: \"file\",\r\n};\r\nexport default Upload;\r\n","D:\\学习\\vv\\src\\components\\Upload\\uploadList.tsx",[],"D:\\学习\\vv\\src\\components\\Progress\\progress.tsx",[],"D:\\学习\\vv\\src\\components\\Upload\\dragger.tsx",[],"D:\\学习\\vv\\src\\components\\Button\\index.tsx",[],"D:\\学习\\vv\\src\\components\\Icon\\index.tsx",[],"D:\\学习\\vv\\src\\components\\Progress\\index.tsx",[],"D:\\学习\\vv\\src\\components\\Input\\index.tsx",[],"D:\\学习\\vv\\src\\components\\Menu\\index.tsx",["155"],"D:\\学习\\vv\\src\\components\\Transition\\index.tsx",[],"D:\\学习\\vv\\src\\components\\AutoComplete\\index.tsx",[],"D:\\学习\\vv\\src\\components\\Upload\\index.tsx",[],{"ruleId":"156","replacedBy":"157"},{"ruleId":"158","replacedBy":"159"},{"ruleId":"156","replacedBy":"160"},{"ruleId":"158","replacedBy":"161"},{"ruleId":"162","severity":1,"message":"163","line":1,"column":29,"nodeType":"164","messageId":"165","endLine":1,"endColumn":53},{"ruleId":"156","replacedBy":"166"},{"ruleId":"158","replacedBy":"167"},{"ruleId":"162","severity":1,"message":"168","line":6,"column":11,"nodeType":"164","messageId":"165","endLine":6,"endColumn":27},{"ruleId":"162","severity":1,"message":"169","line":30,"column":9,"nodeType":"164","messageId":"165","endLine":30,"endColumn":25},{"ruleId":"162","severity":1,"message":"168","line":6,"column":11,"nodeType":"164","messageId":"165","endLine":6,"endColumn":27},{"ruleId":"162","severity":1,"message":"169","line":30,"column":9,"nodeType":"164","messageId":"165","endLine":30,"endColumn":25},{"ruleId":"162","severity":1,"message":"170","line":16,"column":10,"nodeType":"164","messageId":"165","endLine":16,"endColumn":17},{"ruleId":"171","severity":1,"message":"172","line":77,"column":6,"nodeType":"173","endLine":77,"endColumn":21,"suggestions":"174"},{"ruleId":"162","severity":1,"message":"175","line":1,"column":8,"nodeType":"164","messageId":"165","endLine":1,"endColumn":13},{"ruleId":"162","severity":1,"message":"176","line":4,"column":8,"nodeType":"164","messageId":"165","endLine":4,"endColumn":14},{"ruleId":"162","severity":1,"message":"177","line":7,"column":7,"nodeType":"164","messageId":"165","endLine":7,"endColumn":20},{"ruleId":"162","severity":1,"message":"178","line":3,"column":8,"nodeType":"164","messageId":"165","endLine":3,"endColumn":14},{"ruleId":"162","severity":1,"message":"179","line":3,"column":16,"nodeType":"164","messageId":"165","endLine":3,"endColumn":25},"no-native-reassign",["180"],"no-negated-in-lhs",["181"],["180"],["181"],"@typescript-eslint/no-unused-vars","'FunctionComponentElement' is defined but never used.","Identifier","unusedVar",["180"],["181"],"'LakerPlayerProps' is defined but never used.","'lakersWithNumber' is assigned a value but never used.","'loadavg' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fetchSuggestions' and 'inputValue'. Either include them or remove the dependency array.","ArrayExpression",["182"],"'React' is defined but never used.","'upload' is defined but never used.","'checkFileSize' is assigned a value but never used.","'Button' is defined but never used.","'MenuProps' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"183","fix":"184"},"Update the dependencies array to be: [debounceValue, fetchSuggestions, inputValue]",{"range":"185","text":"186"},[2276,2291],"[debounceValue, fetchSuggestions, inputValue]"]