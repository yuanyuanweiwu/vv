[{"D:\\学习\\vv\\src\\index.tsx":"1","D:\\学习\\vv\\src\\reportWebVitals.ts":"2","D:\\学习\\vv\\src\\App.tsx":"3","D:\\学习\\vv\\src\\components\\Button\\button.tsx":"4","D:\\学习\\vv\\src\\components\\Menu\\menu.tsx":"5","D:\\学习\\vv\\src\\components\\Menu\\menuItem.tsx":"6","D:\\学习\\vv\\src\\components\\Menu\\subMenu.tsx":"7","D:\\学习\\vv\\src\\components\\Icon\\icon.tsx":"8","D:\\学习\\vv\\src\\components\\Transition\\transition.tsx":"9","D:\\学习\\vv\\src\\components\\Button\\Button.stories.tsx":"10","D:\\学习\\vv\\src\\components\\Input\\input.tsx":"11","D:\\学习\\vv\\src\\components\\Input\\Input.tsx":"12","D:\\学习\\vv\\src\\components\\Input\\input.stories.tsx":"13","D:\\学习\\vv\\src\\components\\AutoComplete\\AutoComplete.stories.tsx":"14","D:\\学习\\vv\\src\\components\\AutoComplete\\AutoComplete.tsx":"15","D:\\学习\\vv\\src\\components\\AutoComplete\\autoComplete.stories.tsx":"16","D:\\学习\\vv\\src\\components\\AutoComplete\\autoComplete.tsx":"17","D:\\学习\\vv\\src\\hooks\\useDebounce.tsx":"18","D:\\学习\\vv\\src\\hooks\\useClickOutside.tsx":"19","D:\\学习\\vv\\src\\components\\Upload\\upload.stories.tsx":"20","D:\\学习\\vv\\src\\components\\Upload\\upload.tsx":"21"},{"size":508,"mtime":1607928769367,"results":"22","hashOfConfig":"23"},{"size":425,"mtime":1607564715236,"results":"24","hashOfConfig":"23"},{"size":2110,"mtime":1608688266915,"results":"25","hashOfConfig":"23"},{"size":1367,"mtime":1608023662314,"results":"26","hashOfConfig":"23"},{"size":2063,"mtime":1608276479288,"results":"27","hashOfConfig":"23"},{"size":897,"mtime":1608276095400,"results":"28","hashOfConfig":"23"},{"size":2740,"mtime":1608541554527,"results":"29","hashOfConfig":"23"},{"size":670,"mtime":1608778707036,"results":"30","hashOfConfig":"23"},{"size":893,"mtime":1608541362415,"results":"31","hashOfConfig":"23"},{"size":809,"mtime":1608626381437,"results":"32","hashOfConfig":"23"},{"size":1700,"mtime":1608777736445,"results":"33","hashOfConfig":"23"},{"size":1700,"mtime":1608777736445,"results":"34","hashOfConfig":"23"},{"size":1548,"mtime":1608778201596,"results":"35","hashOfConfig":"23"},{"size":2147,"mtime":1608777816773,"results":"36","hashOfConfig":"23"},{"size":2423,"mtime":1608777760056,"results":"37","hashOfConfig":"23"},{"size":2197,"mtime":1608858953510,"results":"38","hashOfConfig":"23"},{"size":4797,"mtime":1608860907331,"results":"39","hashOfConfig":"23"},{"size":422,"mtime":1608792372015,"results":"40","hashOfConfig":"23"},{"size":590,"mtime":1608863652387,"results":"41","hashOfConfig":"23"},{"size":503,"mtime":1608886958445,"results":"42","hashOfConfig":"23"},{"size":2145,"mtime":1608886878060,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"18y9jn7",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"53"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"53"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"53"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\学习\\vv\\src\\index.tsx",[],["92","93"],"D:\\学习\\vv\\src\\reportWebVitals.ts",[],"D:\\学习\\vv\\src\\App.tsx",[],"D:\\学习\\vv\\src\\components\\Button\\button.tsx",[],["94","95"],"D:\\学习\\vv\\src\\components\\Menu\\menu.tsx",[],"D:\\学习\\vv\\src\\components\\Menu\\menuItem.tsx",[],"D:\\学习\\vv\\src\\components\\Menu\\subMenu.tsx",["96"],"import React, { useContext, FunctionComponentElement, useState } from \"react\";\r\nimport classNames from \"classnames\";\r\nimport { MenuContext } from \"./menu\";\r\nimport { MenuItemsProps } from \"./menuItem\";\r\nimport Icon from \"../Icon/icon\";\r\nimport Transition from './../Transition/transition';\r\nexport interface SubMenuProps {\r\n  index?: string;\r\n  title: string;\r\n  className?: string;\r\n}\r\nconst SubMenu: React.FC<SubMenuProps> = ({\r\n  index,\r\n  title,\r\n  children,\r\n  className,\r\n}) => {\r\n  const context = useContext(MenuContext);\r\n  const opendSubMenus = context.defaultOpenSubMenus as Array<string>;\r\n  const isOpend =\r\n    index && context.mode === \"vertical\"\r\n      ? opendSubMenus.includes(index)\r\n      : false;\r\n  const [menuOpen, setOpen] = useState(isOpend);\r\n  const classes = classNames(\"menu-item submenu-item\", className, {\r\n    \"is-active\": context.index === index,\r\n    \"is-opened\": menuOpen,\r\n    \"is-vertical\": context.mode === \"vertical\",\r\n  });\r\n  const handleClick = (e: React.MouseEvent) => {\r\n    e.preventDefault();\r\n    setOpen(!menuOpen);\r\n  };\r\n  let timer: any;\r\n\r\n  const handleMouse = (e: React.MouseEvent, toggle: boolean) => {\r\n    clearTimeout(timer);\r\n    e.preventDefault();\r\n    timer = setTimeout(() => {\r\n      setOpen(toggle);\r\n    }, 300);\r\n  };\r\n  const clickEvents =\r\n    context.mode === \"vertical\"\r\n      ? {\r\n          onClick: handleClick,\r\n        }\r\n      : {};\r\n  const hoverEvents =\r\n    context.mode !== \"vertical\"\r\n      ? {\r\n          onMouseEnter: (e: React.MouseEvent) => handleMouse(e, true),\r\n          onMouseLeave: (e: React.MouseEvent) => handleMouse(e, false),\r\n        }\r\n      : {};\r\n  const renderChildren = () => {\r\n    const subMenuClasses = classNames(\"viking-submenu\", {\r\n      \"menu-opened\": menuOpen,\r\n    });\r\n    const childrenComponent = React.Children.map(children, (child, i) => {\r\n      const childElement = child as React.FunctionComponentElement<MenuItemsProps>;\r\n      if (childElement.type.displayName === \"MenuItem\") {\r\n        return React.cloneElement(childElement, { index: `${index}-${i}` });\r\n      } else {\r\n        console.error(\"wraning\");\r\n      }\r\n      return childElement;\r\n    });\r\n    return  (\r\n      <Transition\r\n        in={menuOpen}\r\n        timeout={300}\r\n        animation=\"zoom-in-top\"\r\n      >\r\n        <ul className={subMenuClasses}>\r\n          {childrenComponent}\r\n        </ul>\r\n      </Transition>\r\n    )\r\n  };\r\n  return (\r\n    <li key={index} className={classes} {...hoverEvents}>\r\n      <div className=\"submenu-title\" {...clickEvents}>\r\n        {title}\r\n        <Icon icon=\"angle-down\" className=\"arrow-icon\" />\r\n      </div>\r\n      {renderChildren()}\r\n    </li>\r\n  );\r\n};\r\nSubMenu.displayName = \"SubMenu\";\r\nexport default SubMenu;\r\n","D:\\学习\\vv\\src\\components\\Icon\\icon.tsx",[],"D:\\学习\\vv\\src\\components\\Transition\\transition.tsx",[],"D:\\学习\\vv\\src\\components\\Button\\Button.stories.tsx",[],"D:\\学习\\vv\\src\\components\\Input\\input.tsx",[],"D:\\学习\\vv\\src\\components\\Input\\Input.tsx",[],"D:\\学习\\vv\\src\\components\\Input\\input.stories.tsx",[],"D:\\学习\\vv\\src\\components\\AutoComplete\\AutoComplete.stories.tsx",["97","98"],"D:\\学习\\vv\\src\\components\\AutoComplete\\AutoComplete.tsx",[],"D:\\学习\\vv\\src\\components\\AutoComplete\\autoComplete.stories.tsx",["99","100"],"import React from \"react\";\r\nimport { storiesOf } from \"@storybook/react\";\r\nimport { action } from \"@storybook/addon-actions\";\r\nimport AutoComplete, { DataSourceType } from \"../AutoComplete/autoComplete\";\r\n\r\ninterface LakerPlayerProps {\r\n  value: string;\r\n  number: number;\r\n}\r\ninterface GithubUserProps {\r\n  login: string;\r\n  url: string;\r\n  avatar_url: string;\r\n}\r\nconst SimpleComplete = () => {\r\n  //   const lakers = [\r\n  //     \"bradley\",\r\n  //     \"pope\",\r\n  //     \"caruso\",\r\n  //     \"cook\",\r\n  //     \"cousins\",\r\n  //     \"james\",\r\n  //     \"AD\",\r\n  //     \"green\",\r\n  //     \"howard\",\r\n  //     \"kuzma\",\r\n  //     \"McGee\",\r\n  //     \"rando\",\r\n  //   ];\r\n  const lakersWithNumber = [\r\n    { value: \"bradley\", number: 11 },\r\n    { value: \"pope\", number: 1 },\r\n    { value: \"caruso\", number: 4 },\r\n    { value: \"cook\", number: 2 },\r\n    { value: \"cousins\", number: 15 },\r\n    { value: \"james\", number: 23 },\r\n    { value: \"AD\", number: 3 },\r\n    { value: \"green\", number: 14 },\r\n    { value: \"howard\", number: 39 },\r\n    { value: \"kuzma\", number: 0 },\r\n  ];\r\n  const renderOption = (item: DataSourceType) => {\r\n    const itemWithGithub = item as DataSourceType<GithubUserProps>;\r\n    return (\r\n      <>\r\n        <h5>Name: {itemWithGithub.url}</h5>\r\n        <p>url: {itemWithGithub.login}</p>\r\n      </>\r\n    );\r\n  };\r\n  //   const handleFetch = (query: string) => {\r\n  //     return lakers.filter((name) => name.includes(query)).map((name) => ({ value: name }));\r\n  //   };\r\n\r\n  // const handleFetch = (query: string) => {\r\n  //   return lakersWithNumber.filter((player) => player.value.includes(query));\r\n  // };\r\n\r\n  const handleFetch=(query:string)=>{\r\n    return fetch(`https://api.github.com/search/users?q=${query}`)\r\n    .then(res=>res.json())\r\n    .then(({items})=>{\r\n      // console.log(items)\r\n      return items.slice(0, 2).map((item: any) => ({ value: item.login, ...item}))\r\n    })\r\n  }\r\n  return (\r\n    <div>\r\n      <h1>222222</h1>\r\n      <AutoComplete\r\n      fetchSuggestions={handleFetch}\r\n      onSelect={action(\"selected\")}\r\n      renderOption={renderOption}\r\n    />\r\n    </div>\r\n  );\r\n};\r\nstoriesOf(\"autocomplete component\", module).add(\"autocomplete\", SimpleComplete);\r\n","D:\\学习\\vv\\src\\components\\AutoComplete\\autoComplete.tsx",["101","102"],"import React, {\r\n  ChangeEvent,\r\n  FC,\r\n  ReactElement,\r\n  KeyboardEvent,\r\n  useEffect,\r\n  useState,\r\n  useRef,\r\n} from \"react\";\r\nimport Input, { InputProps } from \"../Input/input\";\r\nimport Icon from \"../Icon/icon\";\r\nimport useDebounce from \"./../../hooks/useDebounce\";\r\nimport classNames from \"classnames\";\r\nimport useClickOutside from './../../hooks/useClickOutside';\r\nimport Transition from \"../Transition/transition\";\r\nimport { loadavg } from \"os\";\r\ninterface DataSourceObject {\r\n  value: string;\r\n}\r\nexport type DataSourceType<T = {}> = T & DataSourceObject;\r\n\r\nexport interface AutoCompleteProps extends Omit<InputProps, \"onSelect\"> {\r\n  /**用于异步查询*/\r\n  fetchSuggestions: (\r\n    str: string\r\n  ) => DataSourceType[] | Promise<DataSourceType[]>;\r\n  /**\r\n   * 下拉列表选择\r\n   */\r\n  onSelect?: (item: DataSourceType) => void;\r\n  /**自定义渲染 */\r\n  renderOption?: (item: DataSourceType) => ReactElement;\r\n}\r\nconst AutoComple: FC<AutoCompleteProps> = (props) => {\r\n  const {\r\n    fetchSuggestions,\r\n    onSelect,\r\n    value,\r\n    renderOption,\r\n    ...restProps\r\n  } = props;\r\n  const [inputValue, setInputValue] = useState(value as string);\r\n  const [suggestions, setSuggestions] = useState<DataSourceType[]>([]);\r\n  const [Loading, setLoading] = useState(false);\r\n  const [showDropdown, setShowDropdown] = useState(false);\r\n  const [highlightIndex, setHighLightIndex] = useState(-1);\r\n  const triggerSearch=useRef(false)\r\n  const debounceValue = useDebounce(inputValue, 500);\r\n  const componentRef = useRef<HTMLDivElement>(null)\r\n  useClickOutside(componentRef,()=>{setSuggestions([])})\r\n  useEffect(() => {\r\n    if (inputValue &&triggerSearch.current) {\r\n      //判断是否是异步查询\r\n      const result = fetchSuggestions(debounceValue);\r\n      // console.log(result)\r\n      if (result instanceof Promise) {\r\n        setLoading(true);\r\n        result.then((data) => {\r\n          setSuggestions(data);\r\n          setLoading(false);\r\n          if (data.length>0) {\r\n            setShowDropdown(true)\r\n          }\r\n        });\r\n      } else {\r\n        //同步只需要修改state\r\n        setSuggestions(result);\r\n        setShowDropdown(true)\r\n      }\r\n    } else {\r\n      //如果输入值为空清空列表\r\n      setSuggestions([]);\r\n      setShowDropdown(false)\r\n    }\r\n    //消除键盘上下键更改的index\r\n    setHighLightIndex(-1)\r\n  }, [debounceValue]);\r\n \r\n  //用于高亮选中项\r\n  const highlight = (index: number) => {\r\n    if (index < 0) index = 0;\r\n    if (index >= suggestions.length) {\r\n      index = suggestions.length - 1;\r\n    }\r\n    setHighLightIndex(index);\r\n  };\r\n  //键盘按键事件\r\n  const handleKeyDown = (e: KeyboardEvent<HTMLInputElement>) => {\r\n    switch (e.keyCode) {\r\n      case 13:\r\n        if (suggestions[highlightIndex]) {\r\n          handleSelect(suggestions[highlightIndex]);\r\n        }\r\n        break;\r\n      case 38:\r\n        highlight(highlightIndex - 1);\r\n        break;\r\n      case 40:\r\n        highlight(highlightIndex + 1);\r\n        break;\r\n      case 27:\r\n        setShowDropdown(false);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n  //input的value改变\r\n  const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    const value = e.target.value.trim();\r\n    setInputValue(value);\r\n    triggerSearch.current=true\r\n  };\r\n   //从列表中选中项\r\n   const handleSelect = (item: DataSourceType) => {\r\n    setInputValue(item.value);\r\n    setSuggestions([]);\r\n    if (onSelect) {\r\n      onSelect(item);\r\n    }\r\n    triggerSearch.current=false\r\n  };\r\n  //用于判断是否是自定义渲染\r\n  const renderTemplate = (item: DataSourceType) => {\r\n    return renderOption ? renderOption(item) : item.value;\r\n  };\r\n  const generateDropdown = () => {\r\n    return (\r\n      <Transition\r\n      in={showDropdown || Loading}\r\n      animation=\"zoom-in-top\"\r\n      timeout={300}\r\n      onExited={() => {setSuggestions([])}}\r\n    >\r\n      <ul className=\"viking-suggestion-list\">\r\n      { Loading &&\r\n        <div className=\"suggstions-loading-icon\">\r\n          <Icon icon=\"spinner\" spin/>\r\n        </div>\r\n      }\r\n      {suggestions.map((item, index) => {\r\n        const cnames = classNames('suggestion-item', {\r\n          'is-active': index === highlightIndex\r\n        })\r\n        return (\r\n          <li key={index} className={cnames} onClick={() => handleSelect(item)}>\r\n            {renderTemplate(item)}\r\n          </li>\r\n        )\r\n      })}\r\n    </ul>\r\n    </Transition>\r\n    )\r\n  }\r\n \r\n\r\n  return (\r\n    <div className=\"viking-auto-complete\" ref={componentRef}>\r\n      <Input\r\n        value={inputValue}\r\n        onChange={handleChange}\r\n        {...restProps}\r\n        onKeyDown={handleKeyDown}\r\n      />\r\n      {generateDropdown()}\r\n    </div>\r\n  );\r\n};\r\nexport default AutoComple;\r\n","D:\\学习\\vv\\src\\hooks\\useDebounce.tsx",[],"D:\\学习\\vv\\src\\hooks\\useClickOutside.tsx",["103"],"import React, { RefObject,useEffect } from 'react';\r\n\r\nfunction useClickOutside(ref:RefObject<HTMLElement>,handler:Function){\r\n    useEffect(() => {\r\n        const listener = (event: MouseEvent) => {\r\n            if (!ref.current || ref.current.contains(event.target as HTMLElement)) {\r\n              return;\r\n            }\r\n            handler(event);\r\n          };\r\n        \r\n        document.addEventListener('click',listener)\r\n        return () => {\r\n            document.removeEventListener('click',listener)\r\n        }\r\n    }, [ref,handler])\r\n}\r\nexport default useClickOutside\r\n\r\n\r\n\r\n","D:\\学习\\vv\\src\\components\\Upload\\upload.stories.tsx",["104"],"D:\\学习\\vv\\src\\components\\Upload\\upload.tsx",[],{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"105","replacedBy":"109"},{"ruleId":"107","replacedBy":"110"},{"ruleId":"111","severity":1,"message":"112","line":1,"column":29,"nodeType":"113","messageId":"114","endLine":1,"endColumn":53},{"ruleId":"111","severity":1,"message":"115","line":6,"column":11,"nodeType":"113","messageId":"114","endLine":6,"endColumn":27},{"ruleId":"111","severity":1,"message":"116","line":30,"column":9,"nodeType":"113","messageId":"114","endLine":30,"endColumn":25},{"ruleId":"111","severity":1,"message":"115","line":6,"column":11,"nodeType":"113","messageId":"114","endLine":6,"endColumn":27},{"ruleId":"111","severity":1,"message":"116","line":30,"column":9,"nodeType":"113","messageId":"114","endLine":30,"endColumn":25},{"ruleId":"111","severity":1,"message":"117","line":16,"column":10,"nodeType":"113","messageId":"114","endLine":16,"endColumn":17},{"ruleId":"118","severity":1,"message":"119","line":77,"column":6,"nodeType":"120","endLine":77,"endColumn":21,"suggestions":"121"},{"ruleId":"111","severity":1,"message":"122","line":1,"column":8,"nodeType":"113","messageId":"114","endLine":1,"endColumn":13},{"ruleId":"111","severity":1,"message":"123","line":4,"column":8,"nodeType":"113","messageId":"114","endLine":4,"endColumn":14},"no-native-reassign",["124"],"no-negated-in-lhs",["125"],["124"],["125"],"@typescript-eslint/no-unused-vars","'FunctionComponentElement' is defined but never used.","Identifier","unusedVar","'LakerPlayerProps' is defined but never used.","'lakersWithNumber' is assigned a value but never used.","'loadavg' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fetchSuggestions' and 'inputValue'. Either include them or remove the dependency array.","ArrayExpression",["126"],"'React' is defined but never used.","'upload' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"127","fix":"128"},"Update the dependencies array to be: [debounceValue, fetchSuggestions, inputValue]",{"range":"129","text":"130"},[2276,2291],"[debounceValue, fetchSuggestions, inputValue]"]